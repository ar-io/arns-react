{"version":3,"file":"Counter-5ca2b6b2.js","sources":["../../src/hooks/useLongPress/useLongPress.tsx","../../src/components/inputs/Counter/Counter.tsx"],"sourcesContent":["import { useRef } from 'react';\n\nexport function useLongPress(action: () => void) {\n  const timerRef = useRef<NodeJS.Timeout | undefined>();\n  const isLongPress = useRef<boolean>();\n\n  function startPressTimer() {\n    isLongPress.current = false;\n    timerRef.current = setInterval(() => {\n      isLongPress.current = true;\n      action();\n    }, 200);\n  }\n\n  function handleOnClick() {\n    if (isLongPress.current) {\n      return;\n    }\n    action();\n  }\n\n  function handleOnMouseDown() {\n    startPressTimer();\n  }\n\n  function handleOnMouseUp() {\n    clearInterval(timerRef.current);\n  }\n\n  function handleOnTouchStart() {\n    startPressTimer();\n  }\n\n  function handleOnTouchEnd() {\n    clearInterval(timerRef.current);\n  }\n\n  return {\n    handleOnClick,\n    handleOnMouseDown,\n    handleOnMouseUp,\n    handleOnTouchStart,\n    handleOnTouchEnd,\n  };\n}\n","import { clamp } from 'lodash';\nimport { CSSProperties } from 'react';\n\nimport { useLongPress } from '../../../hooks';\nimport ValidationInput from '../text/ValidationInput/ValidationInput';\nimport './styles.css';\n\nfunction Counter({\n  value,\n  setValue,\n  maxValue,\n  minValue,\n  title,\n  valueName,\n  detail,\n  valueStyle = {},\n  containerStyle = {},\n  editable,\n}: {\n  value: number;\n  setValue: (v: number) => void;\n  maxValue: number;\n  minValue: number;\n  title?: JSX.Element | string;\n  valueName?: JSX.Element | string;\n  detail?: JSX.Element | string;\n  valueStyle?: CSSProperties;\n  containerStyle?: CSSProperties;\n  editable?: boolean;\n}) {\n  // TODO make this component generic; pass in count and setCount\n  const {\n    handleOnClick: incHandleOnClick,\n    handleOnMouseDown: incHandleOnMouseDown,\n    handleOnMouseUp: incHandleOnMouseUp,\n    handleOnTouchEnd: incHandleOnTouchEnd,\n    handleOnTouchStart: incHandleOnTouchStart,\n  } = useLongPress(() => (value < maxValue ? setValue(++value) : null));\n  const {\n    handleOnClick: decHandleOnClick,\n    handleOnMouseDown: decHandleOnMouseDown,\n    handleOnMouseUp: decHandleOnMouseUp,\n    handleOnTouchEnd: decHandleOnTouchEnd,\n    handleOnTouchStart: decHandleOnTouchStart,\n  } = useLongPress(() => (value > minValue ? setValue(--value) : null));\n\n  return (\n    <div className=\"counter-container center\" style={containerStyle}>\n      {title}\n      <div className=\"flex-column center\">\n        <div className=\"counter\">\n          <button\n            className={`counter-button ${minValue === value ? '' : 'hover'}`}\n            disabled={value == minValue}\n            onClick={decHandleOnClick}\n            onMouseDown={decHandleOnMouseDown}\n            onMouseUp={decHandleOnMouseUp}\n            onTouchStart={decHandleOnTouchStart}\n            onTouchEnd={decHandleOnTouchEnd}\n            onMouseLeave={decHandleOnTouchEnd}\n            style={{\n              borderColor: minValue === value ? 'var(--disabled-grey)' : '',\n              color: minValue === value ? 'var(--disabled-grey)' : 'white',\n            }}\n          >\n            -\n          </button>\n          <div\n            className=\"flex flex-column flex-center\"\n            style={{ width: 'fit-content', gap: '0px' }}\n          >\n            <span\n              className=\"text-large white center\"\n              style={{\n                fontWeight: 500,\n                ...valueStyle,\n                paddingTop: '7px',\n                paddingBottom: '7px',\n              }}\n            >\n              {editable ? (\n                <ValidationInput\n                  value={value.toFixed()} // removes leading zeroes\n                  setValue={(v: string | number) => {\n                    setValue(\n                      Math.round(clamp(v as number, minValue, maxValue)),\n                    );\n                  }}\n                  minNumber={minValue}\n                  maxNumber={maxValue}\n                  inputType=\"number\"\n                  id=\"counter-input\"\n                  catchInvalidInput={false}\n                  inputClassName=\"counter-input\"\n                  wrapperClassName=\"flex center\"\n                  validationPredicates={{}}\n                />\n              ) : (\n                value\n              )}\n\n              {valueName ? (\n                <span className=\"whitespace-nowrap\">&nbsp;{valueName}</span>\n              ) : (\n                <></>\n              )}\n            </span>\n            {detail ? (\n              <span className=\"text grey center\" style={{ fontSize: '14px' }}>\n                {detail}\n              </span>\n            ) : (\n              <></>\n            )}\n          </div>\n          <button\n            className={`counter-button ${maxValue === value ? '' : 'hover'}`}\n            disabled={value == maxValue}\n            onClick={incHandleOnClick}\n            onMouseDown={incHandleOnMouseDown}\n            onMouseUp={incHandleOnMouseUp}\n            onTouchStart={incHandleOnTouchStart}\n            onTouchEnd={incHandleOnTouchEnd}\n            onMouseLeave={incHandleOnTouchEnd}\n            style={{\n              borderColor: maxValue === value ? 'var(--disabled-grey)' : '',\n              color: maxValue === value ? 'var(--disabled-grey)' : '',\n            }}\n          >\n            +\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Counter;\n"],"names":["useLongPress","action","timerRef","reactExports","isLongPress","startPressTimer","handleOnClick","handleOnMouseDown","handleOnMouseUp","handleOnTouchStart","handleOnTouchEnd","Counter","value","setValue","maxValue","minValue","title","valueName","detail","valueStyle","containerStyle","editable","incHandleOnClick","incHandleOnMouseDown","incHandleOnMouseUp","incHandleOnTouchEnd","incHandleOnTouchStart","decHandleOnClick","decHandleOnMouseDown","decHandleOnMouseUp","decHandleOnTouchEnd","decHandleOnTouchStart","jsxRuntimeExports","ValidationInput","v","lodashExports"],"mappings":"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"}