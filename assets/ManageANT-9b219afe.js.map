{"version":3,"file":"ManageANT-9b219afe.js","sources":["../../src/components/icons/CodeSandbox.svg","../../src/components/cards/TransactionSuccessCard/TransactionSuccessCard.tsx","../../src/components/pages/ManageANT/ManageANT.tsx"],"sourcesContent":["export default \"__VITE_ASSET__06c47cd0__\"","import { useEffect, useRef } from 'react';\n\nimport { ArweaveTransactionID } from '../../../services/arweave/ArweaveTransactionID';\nimport { CircleCheckFilled, CloseIcon } from '../../icons';\nimport ArweaveID, { ArweaveIdTypes } from '../../layout/ArweaveID/ArweaveID';\n\nfunction TransactionSuccessCard({\n  txId,\n  title,\n  close,\n}: {\n  txId: ArweaveTransactionID;\n  close?: () => void;\n  title?: string;\n}) {\n  const cardRef = useRef<HTMLDivElement>(null);\n  useEffect(() => {\n    cardRef.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [txId, cardRef]);\n\n  return (\n    <div\n      ref={cardRef}\n      className=\"flex flex-row success-container center fade-in\"\n    >\n      <CircleCheckFilled\n        width={'20px'}\n        height={'20px'}\n        fill={'var(--success-green)'}\n      />\n      <div\n        className=\"flex-column\"\n        style={{\n          width: '100%',\n          justifyContent: 'flex-start',\n          alignItems: 'flex-start',\n          gap: '5px',\n          fontSize: '16px',\n        }}\n      >\n        <span className=\"white\">{title ?? 'Transaction Complete'}</span>\n        <ArweaveID\n          id={txId}\n          type={ArweaveIdTypes.INTERACTION}\n          shouldLink={true}\n          linkStyle={{ color: 'var(--success-green)' }}\n        />\n      </div>\n      {close ? (\n        <button className=\"button flex center pointer\" onClick={close}>\n          <CloseIcon width={'20px'} height={'20px'} fill=\"white\" />\n        </button>\n      ) : (\n        <></>\n      )}\n    </div>\n  );\n}\n\nexport default TransactionSuccessCard;\n","import DomainSettings, {\n  DomainSettingsRowTypes,\n} from '@src/components/forms/DomainSettings/DomainSettings';\nimport useDomainInfo from '@src/hooks/useDomainInfo';\nimport { useTransactionState } from '@src/state/contexts/TransactionState';\nimport { useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { ArweaveTransactionID } from '../../../services/arweave/ArweaveTransactionID';\nimport TransactionSuccessCard from '../../cards/TransactionSuccessCard/TransactionSuccessCard';\nimport { CodeSandboxIcon } from '../../icons';\nimport './styles.css';\n\nfunction ManageANT() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const { isLoading, data } = useDomainInfo({\n    antId: id,\n    domain: '',\n  });\n\n  const [{ interactionResult, workflowName }, dispatchTransactionState] =\n    useTransactionState();\n\n  useEffect(() => {\n    // removes banner from page by calling rest\n    return () => {\n      dispatchTransactionState({ type: 'reset' });\n    };\n  }, []);\n\n  useEffect(() => {\n    if (!id) {\n      navigate('/manage/ants');\n      return;\n    }\n\n    // fetch all relevant ant information\n  }, [id]);\n\n  if (isLoading) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <div\n        className=\"page\"\n        style={{ gap: '0px', paddingTop: '10px', paddingBottom: '10px' }}\n      >\n        {interactionResult ? (\n          <TransactionSuccessCard\n            txId={new ArweaveTransactionID(interactionResult.id)}\n            title={`${workflowName} completed`}\n            close={() => {\n              dispatchTransactionState({\n                type: 'reset',\n              });\n            }}\n          />\n        ) : (\n          <></>\n        )}\n        <div className=\"flex-row flex-space-between\">\n          <h2 className=\"flex white center\" style={{ gap: '15px' }}>\n            <CodeSandboxIcon\n              width={'24px'}\n              height={'24px'}\n              fill=\"var(--text-white)\"\n            />\n            {data?.name ?? id}\n          </h2>\n        </div>\n        <div className=\"flex-row\">\n          <DomainSettings\n            antId={id}\n            rowFilter={[\n              DomainSettingsRowTypes.EXPIRY_DATE,\n              DomainSettingsRowTypes.LEASE_DURATION,\n              DomainSettingsRowTypes.ASSOCIATED_NAMES,\n            ]}\n          />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default ManageANT;\n"],"names":["SvgCodeSandbox","props","reactExports","TransactionSuccessCard","txId","title","close","cardRef","_a","jsxRuntimeExports","SvgCircleCheckFilled","ArweaveID","ArweaveIdTypes","SvgClose","ManageANT","id","useParams","navigate","useNavigate","isLoading","data","useDomainInfo","interactionResult","workflowName","dispatchTransactionState","useTransactionState","ArweaveTransactionID","DomainSettings","DomainSettingsRowTypes"],"mappings":"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"}